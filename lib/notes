// TODO: 
// ! Este arquivo deve ser utilizado como um (quase)backup para não esgotar os CTRL + Z.

import 'package:flutter/material.dart';

class ExemploSliverBody extends StatefulWidget {
  const ExemploSliverBody({super.key});

  @override
  State<ExemploSliverBody> createState() => _ExemploSliverBodyState();
}

class _ExemploSliverBodyState extends State<ExemploSliverBody> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
        body: CustomScrollView(
      slivers: [
        const SliverAppBar(
          title: Text('ExemploSliverBody'),
          floating: true,
        ),
        SliverToBoxAdapter(
          child: Container(
            height: 200,
            color: Colors.red,
            child: const Center(child: Text('SliverToBoxAdapter')),
          ),
        ),
        SliverGrid.count(
          crossAxisCount: 2,
          children: [
            Container(color: Colors.green, child: const Text('SliverGrid')),
            Container(color: Colors.blue, child: const Text('SliverGrid')),
            Container(color: Colors.orange, child: const Text('SliverGrid')),
            Container(color: Colors.purple, child: const Text('SliverGrid')),
          ],
        ),
        SliverList(
          delegate: SliverChildBuilderDelegate(
            (context, index) {
              return ListTile(
                leading: CircleAvatar(
                  child: Text('$index'),
                ),
                title: Text('SliverList item $index'),
              );
            },
            childCount: 10,
          ),
        ),
        SliverPersistentHeader(
          delegate: _MyPersistentHeaderDelegate(),
          pinned: true,
        ),
        SliverPadding(
          padding: const EdgeInsets.symmetric(vertical: 50),
          sliver: SliverFixedExtentList(
            itemExtent: 50,
            delegate: SliverChildBuilderDelegate(
              (context, index) {
                return ListTile(
                  leading: CircleAvatar(
                    child: Text('$index'),
                  ),
                  title: Text('$index'),
                );
              },
              childCount: 10,
            ),
          ),
        ),
        SliverFillViewport(
          delegate: SliverChildListDelegate(
            [
              Container(
                height: 800,
                color: Colors.grey,
                child: const Center(
                  child: Text(
                    'SliverFillViewport',
                    style: TextStyle(
                      fontSize: 24,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                ),
              ),
            ],
          ),
        ),
        SliverFillRemaining(
          child: Container(
            color: Colors.yellow,
            child: const Center(
              child: Text(
                'SliverFillRemaining',
                style: TextStyle(
                  fontSize: 24,
                  fontWeight: FontWeight.bold,
                ),
              ),
            ),
          ),
        ),
      ],
    ));
  }
}

class _MyPersistentHeaderDelegate extends SliverPersistentHeaderDelegate {
  @override
  Widget build(
      BuildContext context, double shrinkOffset, bool overlapsContent) {
    return Container(
      color: Colors.blue,
      child: const Center(
        child: Text(
          'SliverPersistentHeader',
          style: TextStyle(
            fontSize: 24,
            fontWeight: FontWeight.bold,
            color: Colors.white,
          ),
        ),
      ),
    );
  }

  @override
  double get maxExtent => 50;

  @override
  double get minExtent => 50;

  @override
  bool shouldRebuild(_MyPersistentHeaderDelegate oldDelegate) {
    return false;
  }
}

// Divisão


import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:tech_share/user_profile.dart';
import 'package:tech_share/valores_e_funcoes.dart';
import 'index.dart';
import 'teste.dart';

class BottomNavBar extends StatefulWidget {
  const BottomNavBar({super.key});

  @override
  State<BottomNavBar> createState() => _BottomNavBarState();
}

class _BottomNavBarState extends State<BottomNavBar> {
  int _selectedIndex = 0;
  static const List<Widget> _widgetOptions = <Widget>[
    Index(),
    Teste(),
    UserProfile(),
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: _widgetOptions.elementAt(_selectedIndex),
      bottomNavigationBar: BottomNavigationBar(
        type: BottomNavigationBarType.shifting,
        items: <BottomNavigationBarItem>[
          BottomNavigationBarItem(
            icon: !isIOS ? const Icon(Icons.home) : const Icon(CupertinoIcons.home),
            label: 'Index',
          ),
          BottomNavigationBarItem(
            icon: !isIOS ? const Icon(Icons.question_answer) : const Icon(CupertinoIcons.chat_bubble_2),
            label: 'Conversas',
          ),
          BottomNavigationBarItem(
            icon: !isIOS ? const Icon(Icons.person) : const Icon(CupertinoIcons.person),
            label: 'Configurações',
          ),
        ],
        currentIndex: _selectedIndex,
        unselectedItemColor: Colors.grey[500],
        selectedItemColor: Colors.green,
        onTap: (index) => setState(() {
          _selectedIndex = index;
        }),
      ),
    );
  }
}
